<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "Http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board.dao.BoardDAO">
	<resultMap type="boardVO" id="boardMap">
		<result column="view_cnt" property="viewCnt" />
		<result column="reg_date" property="regDate" /> <!-- column는 db꺼 property 멤버변수 -->
	</resultMap>
	
	<!-- 공지기간이면서 활성화상태인 공지의 파일 저장이름 리스트 조회 -->
	<select id="selectSaveNameList" resultType="boardFileVO">
	select FILE_SAVE_NAME as fileSaveName from S_BOARD_FILE where BOARD_NO in (
    select no from (
      select no,title,writer,content,reply_cnt,start_date,end_date,reg_date, 
        case  
          <![CDATA[ when TO_CHAR(start_date,'YYYYMMDD')<=TO_CHAR(SYSDATE, 'YYYYMMDD') and TO_CHAR(end_date,'YYYYMMDD')>=TO_CHAR(SYSDATE, 'YYYYMMDD')  then 1 ]]>
          else 0 
        end as view_cnt 
    from s_board ) where view_cnt=1 and reply_cnt=1)
	</select>
	
	<select id="selectByNo" resultMap="boardMap" parameterType="int">
		select no, title, writer, content, view_cnt,   reply_cnt,
		  to_char(reg_date, 'yyyy-mm-dd') as reg_date, to_char(start_date, 'yyyy-mm-dd') as start_date, to_char(end_date, 'yyyy-mm-dd') as end_date
		  from s_board 
		 where no = #{no}
	</select>

	<!-- <select id="selectAll1" resultType="boardVO">
		select no, title, writer, to_char(reg_date, 'yyyy-mm-dd') as regDate,  
		  to_char(start_date, 'yyyy-mm-dd') as start_date, to_char(end_date, 'yyyy-mm-dd') as end_date
		  from s_board 
		 order by no desc
	</select>  -->
	
	<select id="selectAll" resultType="boardVO">
		select no,title,writer,content,reply_cnt,start_date,end_date,to_char(reg_date, 'yyyy-mm-dd') as regDate,  
    case 
    <![CDATA[when TO_CHAR(start_date,'YYYYMMDD') <= TO_CHAR(SYSDATE, 'YYYYMMDD') and TO_CHAR(end_date,'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD')  then 1]]>
        else 0 
    end as viewCnt 
    from s_board order by no desc 
	</select>
	
	<insert id="insert" parameterType="boardVO">
      	insert into s_board(no, title, writer, content,start_date,end_date) 
      	values(#{no}, #{title}, #{writer}, #{content}, #{start_date}  ,#{end_date})
    </insert>
    
    
	<!-- 댓글카운트 증가 -->
	<update id="incrementReplyCnt" parameterType="int">
		update s_board 
		   set reply_cnt = reply_cnt + 1 
		 where no = #{no}
	</update>
	
	<!-- 댓글카운트 감소 -->
	<update id="reduceReplyCnt" parameterType="int">
		update s_board 
		   set reply_cnt = reply_cnt - 1 
		 where no = #{no}
	</update>
	
	<!-- board seq 가져오기 -->
	<select id="selectBoardSeq" resultType="int">
	   select seq_s_board_no.nextval from dual
	</select>
	
	<insert id="insertFile" parameterType="boardFileVO">
	  insert into s_board_file(no,board_no,file_ori_name,file_save_name,file_size) values
	     (seq_s_board_file_no.nextval, #{boardNo}, #{fileOriName}, #{fileSaveName}, #{fileSize}   )
	</insert>
	
	<select id="selectFileByNo" parameterType="int" resultType="boardFileVO">
	   select no, board_no as boardNo, file_ori_name as fileOriName, file_save_name as fileSaveName, file_size as fileSize 
	   from s_board_file where board_no = #{boardNo}
	</select>
	
	<!-- 수수료 조정 -->
	<update id="changeCommission" parameterType="currencyVO">
	   update S_CURRENCYRATE set COMMISSION = #{commission}, COMMISSION2=#{commission2} ,COMMISSION3 =#{commission3} ,COMMISSION4 =#{commission4} 
	   where CURRENCY = #{currency}
	</update>
	
	
</mapper>